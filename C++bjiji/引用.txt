堆区申请内存 int* p = new int(0);
            int* pi = new int[4];
	    memset(pi,0,4*sizeof(int));


清除申请的内存 delete p;p=NULL;
	      delete [] pi;pi=NULL;
不重定为NULL为野指针，申请堆空间后不delete,为内存泄漏

引用： 变量的别名，不开辟内存；定义时必须初始化
int a = 100;
int &p = a;
  主要作用：
	使得一个函数的某些参数变为向外进行数据传递
  引用型参数的作用：
	1.提高函数传递过程中的效率 
	2.函数内对形参的操作会直接影响实参的值
	  （将参数变成向外进行数据传递）
可为堆内存取变量名：
	int* p = new int(3);
	int &a = *p;
	cout << a << endl; //a=3

常量引用：
	const int &p    可读取，不可修改

用引用的地方都可以用指针，但指针可改指向不安全
指针与引用的区别：
	1.指针可以改变指向，但引用不能
	2.指针永远只占4个字节，引用的字节大小取决于引用的数据
	3.指针定义时可不初始化，空指针，引用定义时必须初始化

不能引用数组名，但作为函数参数时，可以





