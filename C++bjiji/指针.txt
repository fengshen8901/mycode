指针是一种数据类型，是存储内存地址的变量
指针只能进行赋值运算、部分算术运算以及关系运算。
&运算符，1.按位与
	 2.取地址
	 3.引用
*运算符，1.乘法
	 2.指针变量声明定义
	 3.解引用（间接引用）

指针使用前最好判断是否为空指针：
   int* p = NULL;
   if(p)
	cout << *p << endl;
   else
        cout << "该指针为空指针" << endl;

无类型指针不可解引用（除强制转换类型）*（（int*)pvalue)

指向二维数组的指针 （*p）[4]
指向函数的指针   （*p）()
二级指针，*p  **p1=&p
指针数组 *p[2]={NULL,NULL};

指针与常量
常量指针 不可解引用改变量值， 可改指向，   可指向一个常量      int const *p
指针常量 不可改指向，    可改解引用的变量值   不可指向一个常量 int *const p
指向常量的常量指针  指向，解引用改值都不可改                  const int *const p