#include <Windows.h>
#pragma comment(lib,"winmm.lib")
HANDLE hOutBuf;
COORD outBufCoord;
DWORD outBufBytes;
CONSOLE_CURSOR_INFO outBufCci;

char pBuffer[200] = { 0 };//=======缓冲数组
void initShowSet()
{
	//获取默认标准显示缓冲区句柄
	outBufCoord.X = 0;
	outBufCoord.Y = 0;

	//创建新的缓冲区
	hOutBuf = CreateConsoleScreenBuffer(
		GENERIC_READ | GENERIC_WRITE,
		FILE_SHARE_READ | FILE_SHARE_WRITE,
		NULL,
		CONSOLE_TEXTMODE_BUFFER,
		NULL
		);

	//设置新的缓冲区为活动显示缓冲
	SetConsoleActiveScreenBuffer(hOutBuf);

	//隐藏两个缓冲区的光标
	outBufCci.bVisible = 0;
	outBufCci.dwSize = 1;
	SetConsoleCursorInfo(hOutBuf, &outBufCci);

	//双缓冲处理显示
	outBufBytes = 0;
}
void showScreenData()
{
	//将屏幕数据的字符数组pBuffer直接传递给输出流。
	WriteConsoleOutputCharacterA(hOutBuf, pBuffer, 6/*=============需要输出字节大小，注意‘\0’*/, outBufCoord, &outBufBytes);
}
void main()
{
	char a;
	initShowSet();
	strcpy(pBuffer, "刷新");//=================================
	for (int i = 0; i < 2; ++i)
	{
		showScreenData();
		_sleep(1000);
		system("cls");
	}
	//memset(pBuffer, 0, sizeof(pBuffer));
	strcpy(pBuffer, "好了f");
	showScreenData();
	
}                          

